---
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import { formatDate, isCurrent, sortExperiencesByDate } from "@/lib/date";
import { getCollection } from "astro:content";
import SectionTitle from "./SectionTitle.astro";
import Section from "@/layouts/Section.astro";
import type { CollectionEntry } from "astro:content";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const collectionName = `experience-${lang}` as const;
const experiences = await getCollection(collectionName);

const sortedExperiences: CollectionEntry<typeof collectionName>[] = sortExperiencesByDate(experiences);
---
<Section id={t('nav.experience')}>
  <SectionTitle title={t('experience.title')} />
  <div class="relative">
    <div class="absolute left-[0.45rem] top-4 bottom-4 w-0.5 bg-gradient-to-b from-transparent via-primary to-transparent z-0"></div>
    <div class="space-y-8">
      {sortedExperiences.map((experience) => (
        <div class="relative flex items-start gap-4">
          <!-- Timeline dot -->
          <div class="flex items-center justify-center size-4 border-2 border-primary bg-background rounded-full self-center">
            {isCurrent(experience.data.endDate) && (
              <div class="size-2 bg-primary rounded-full animate-pulse"></div>
            )}
          </div>
          
          <!-- Experience content -->
          <div class="flex-1 min-w-0">
            <div class="backdrop-blur-sm rounded-lg p-6 border border-primary bg-primary/5 space-y-4">
              <!-- Header -->
              <div class="flex flex-col md:flex-row items-start md:justify-between gap-2">
                <div class="flex flex-col gap-1">
                  <h3 class="text-xl font-semibold">
                    {experience.data.position}
                  </h3>
                  <p class="w-fit -ml-1 font-medium text-primary bg-primary/10 px-2 rounded-full border border-primary/30">
                    {experience.data.company}
                  </p>
                  <p class="text-sm text-muted-foreground">
                    {experience.data.location}
                  </p>
                </div>
                
                <div class="flex flex-col gap-2 items-start md:items-end">
                  <div class="flex flex-wrap items-center gap-1">
                    <span class="text-sm font-medium first-letter:uppercase">
                      {formatDate(experience.data.startDate, lang)}
                    </span>
                    <span>â†’</span>
                    <span class="text-sm font-medium first-letter:uppercase">
                      {isCurrent(experience.data.endDate) 
                        ? t('experience.present')
                        : formatDate(experience.data.endDate, lang)
                      }
                    </span>
                  </div>
                  <span class="inline-flex items-center text-sm text-muted-foreground">
                    {experience.data.type}
                  </span>
                </div>
              </div>
              
              <!-- Description -->
              {experience.data.description && experience.data.description.length > 0 && (
                <ul class="relative space-y-2 text-sm text-foreground/80">
                  {experience.data.description.map((item: string) => (
                    <div class="flex items-baseline gap-2 leading-6">
                      <span class="size-2 border-2 border-primary rounded-full flex-shrink-0" />
                      <li>
                        {item}
                      </li>
                    </div>
                  ))}
                </ul>
              )}
              
              <!-- Technologies -->
              {experience.data.technologies && experience.data.technologies.length > 0 && (
                <div class="space-y-2">
                  <p class="text-sm text-muted-foreground">
                    {t('experience.technologies')}
                  </p>
                  <div class="flex flex-wrap gap-2">
                    {experience.data.technologies.map((tech: string) => (
                      <span class="text-sm py-1 px-2 rounded-md bg-foreground/3 dark:bg-foreground/5">
                        {tech}
                      </span>
                    ))}
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</Section>