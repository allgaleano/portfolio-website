---
import { getLangFromUrl, useTranslations } from "@/i18n/utils";
import { calculateDuration, formatDate, isCurrent, sortExperiencesByDate } from "@/lib/experiences";
import { getCollection } from "astro:content";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const collectionName = `experience-${lang}` as const;
const experiences = await getCollection(collectionName);

const sortedExperiences = sortExperiencesByDate(experiences);
---
<section class="max-w-[1200px] mx-auto rounded-lg p-6 space-y-8 mb-12">
  <h2 class="text-2xl w-fit font-bold bg-clip-text text-transparent bg-gradient-to-r from-foreground/80 to-foreground dark:from-foreground dark:to-foreground/60" >
    {t('experience.title')}
  </h2>
  <div class="relative">
    <div class="absolute left-[0.5rem] top-4 bottom-4 w-0.5 bg-gradient-to-b from-transparent via-primary to-transparent z-0"></div>
    <div class="space-y-8">
      {sortedExperiences.map((experience) => (
        <div class="relative flex items-start gap-4">
          <!-- Timeline dot -->
          <div class="z-10 flex items-center justify-center size-4 border-2 border-primary bg-background rounded-full self-center">
            {isCurrent(experience.data.endDate) && (
              <div class="size-2 bg-primary rounded-full animate-pulse"></div>
            )}
          </div>
          
          <!-- Experience content -->
          <div class="flex-1 min-w-0">
            <div class="backdrop-blur-sm rounded-lg p-6 border border-primary bg-primary/5 ">
              <!-- Header -->
              <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-4">
                <div class="flex flex-col gap-1">
                  <h3 class="text-xl font-semibold">
                    {experience.data.position}
                  </h3>
                  <p class="font-medium text-primary">
                    {experience.data.company}
                  </p>
                  <p class="text-sm text-muted-foreground">
                    {experience.data.location}
                  </p>
                </div>
                
                <div class="flex flex-col gap-1 items-start md:items-end mt-2 md:mt-0">
                  <div class="flex items-center space-x-2">
                    <span class="text-sm font-medium">
                      {formatDate(experience.data.startDate, lang)}
                    </span>
                    <span>â†’</span>
                    <span class="text-sm font-medium">
                      {isCurrent(experience.data.endDate) 
                        ? t('experience.present')
                        : formatDate(experience.data.endDate, lang)
                      }
                    </span>
                  </div>
                  <div class="text-sm text-muted-foreground">
                    {calculateDuration(experience.data.startDate, experience.data.endDate, lang)}
                  </div>
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-primary/15 text-primary">
                    {experience.data.type}
                  </span>
                </div>
              </div>
              
              <!-- Description -->
              {experience.data.description && (
                <p class="text-muted-foreground">
                  {experience.data.description}
                </p>
              )}
              
              <!-- Technologies -->
              {experience.data.technologies && experience.data.technologies.length > 0 && (
                <div class="space-y-2">
                  <p class="text-sm text-muted-foreground">
                    {t('experience.technologies')}
                  </p>
                  <div class="flex flex-wrap gap-2">
                    {experience.data.technologies.map((tech: string) => (
                      <span class="text-sm py-1 px-2 rounded-md bg-foreground/5">
                        {tech}
                      </span>
                    ))}
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>